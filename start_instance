#! /bin/bash
#  authorization information is now set in ~/.ssh/config
# so the work with the AWSAUTH env-var is superfluous now

REMTOE=${1}

if [ "X"$REMTOE == "X" ]; then
	# check for an already open socket
	REMTOE=$(basename `ls -d ~/.ssh/sockets/*compute.amazonaws.com* 2> /dev/null` 2> /dev/null |
		sed -e 's/:22$//' -e 's/^ubuntu@//')
	echo Connecting to $REMTOE
	host $REMTOE
fi 
if [ "X"$REMTOE == "X" ]; then 
	echo ${EC2_HOME}ec2-describe-instances
	# there is no socket, open. Maybe there is a running instance
	if [ -x ${EC2_HOME}bin/ec2-describe-instances ]; then 
		REMTOE=$(${EC2_HOME}bin/ec2-describe-instances | awk '/^INSTANCE/{print $4}')
	fi
fi
if [ "X"$REMTOE == "X" ]; then
	# There is no socket and there is no running instance. Fallover. We cannot continue without an open instance.
	echo "Remote host to connect to? Cannot find a master socket."
	exit 1
fi

AWSAUTH=~/.ssh/chris-duncombe-rae.pem


# Test if we have been here before and done an installation
if ( ! ssh -i $AWSAUTH   ubuntu@$REMTOE test -f .installation_complete ) ; then 


# echo Copying startup script
# scp -i $AWSAUTH  startup.script ubuntu@$REMTOE:

# echo Copying github keys
scp -i $AWSAUTH  /home/duncombe/.ssh/github_key{,.pub} ubuntu@$REMTOE:.ssh/ ||
	{ echo Transfer github keys failed ; exit 1 ; }

# Make a copy of the local git --global options
scp -i $AWSAUTH  /home/duncombe/.gitconfig  ubuntu@$REMTOE: ||
	{ echo Transfer .gitconfig failed ; exit 3 ; }

# Create a useful ssh_config
( ssh -i $AWSAUTH  ubuntu@$REMTOE cat \> .ssh/config << ENDIN 
Host github github.com
        Hostname github.com
        User git
        IdentityFile ~/.ssh/github_key
	StrictHostKeyChecking   no 

# vim:  se nowrap tw=0 :
ENDIN
) || { echo Creating .ssh/config file failed ; exit 2 ; }

# install git-core so we can continue
ssh -i $AWSAUTH   ubuntu@$REMTOE sudo apt-get install -y git-core

# clone the setup script out of github
ssh -i $AWSAUTH   ubuntu@$REMTOE git clone github:duncombe/setup

# run the setup script
ssh -i $AWSAUTH   ubuntu@$REMTOE setup/setup.sh

# Leave a marker that we completed the install
ssh -i $AWSAUTH   ubuntu@$REMTOE touch .installation_complete

# End of the installation check
else 
	echo A previous startup installation was detected.  Logging in.
fi

# start an interactive shell
ssh -i $AWSAUTH   ubuntu@$REMTOE

# vim: se nowrap tw=0 :
 
